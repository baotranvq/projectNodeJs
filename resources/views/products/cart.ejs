<div class="main-content">



    <div>
        <div class="main-cartview">
            <div id="toast">

            </div>
            <div style="flex-basis: 70%;">
                <div class="cart-left">
                    <div id="hide" class="main-panner">
                        <p>FREE DELIVERY Applies to orders of 5.000.000₫ or more. </p>
                        <i style="cursor: pointer;" onclick="hide()" class="bi bi-x-lg"></i>
                    </div>
                    <div class="main-textbag">
                        <h4>Bag</h4>
                    </div>
                    <div id="cart-bag">
                        <!-- render cart từ API  -->
                    </div>

                    <!--  -->
                    <div class="content-favourite">
                        <div>
                            <h4>Favourites</h4>
                        </div>
                        <div>
                            <p>Want to view your favourites? <span><a style="color: black;" href="">Join In</a></span>
                                or <span><a style="color: black;" href="">Sign In</a></span></p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="cart-summary" style="flex-basis: 40%;">
                <div style="padding-bottom: 30px;">
                    <h4>Summary</h4>
                </div>
                <div class="content-question">
                    <div>
                        <p>Subtotal <i class="bi bi-question-circle"></i></p>
                    </div>
                    <!-- TOTAL  -->
                    <div>
                        <p class="detail-subtotal"></p>
                    </div>
                </div>
                <div class="content-free">
                    <div>
                        <p>Estimated Delivery & Handling</p>
                    </div>
                    <div>
                        <p class="cart-ship"></p>
                    </div>
                </div>
                <div class="content-total">
                    <p class="bag-total">Total</p>
                    <p class="cart-total" id="bag-total"></p>
                </div>
                <div style="padding-top: 30px;">
                    <form action="/checkout/cart" method="post">
                        <div class="productAddToBag">
                            <div class="cart-id-cart">
                                <!-- // render id cart  -->
                                <input id="totalPrice" type="hidden" name="totalPrice"  value="">
                            </div>
                            <button type="submit">Checkout</button>
                        </div>
                    </form>
                    
                    <!-- <input class="content-clickbt" type="button" value="Guest Checkout">
                    <br>
                    <input class="content-clickbt" type="button" value="Menber Checkout"> -->
                </div>
            </div>

        </div>

    </div>

</div>
<script>
    const cartApi = '/users/APIcarts';
    async function start() {
        let apiCarts = await getCarts(); // lấy API to Array
        renderCarts(apiCarts) // render view cart
        // handleSubmitForm(apiCarts)
        renderCartSummary(apiCarts) // render view Summary

    }
    start();


    async function getCarts() {
        const response = await fetch(cartApi);
        const carts = await response.json();
        return carts
    }

    function renderCarts(carts) {
        document.getElementById("quatity").innerHTML = carts.length;// cập nhật lại số lượng giỏ hàng

        let listCarts = document.querySelector('#cart-bag');
        let html = carts.map(function (cart) {
            return `
            <div class="main-cartitem cart-item-${cart.id_cart}">
                <div class="content-autocontent-auto">
                    <a href=""><img src="../../.././images/products/${cart.thumbnail_1}" alt=""></a>
                </div>
                <div class="content-auto1">
                    <div class="main-cartdata">
                        <div class="main-datavertion">
                            <a style="text-decoration: none; color: black; font-weight: 500;" href="">${cart.product_name}</a>
                            <p style="padding-top: 10px;">${cart.type} Shoes</p>
                            <p>Color: ${cart.color_name}</p>
                            <div class="detail-size-quantity">
                                <p >${cart.size_name}</p>
                                <p >Quantity</p>
                                <div class="quantity-container">
                                    <button onclick="decreaseQuantity(${cart.id_cart}, ${cart.quantity})"><i class="bi bi-dash"></i></button>
                                    <input id="quantity_input_${cart.id_cart}" class="quantity_input" type="text" oninput="handleUpdateQuantityCart(${cart.id_cart}, ${cart.quantity})" value="${cart.quantity_cart}">
                                    <button onclick="increaseQuantity(${cart.id_cart}, ${cart.quantity})"><i class="bi bi-plus"></i></button>
                                </div>
                            </div>
                        </div>
                        <div class="cart-detail">
                            ${cart.promotion_price ? `<p class="detail-cardPrice">${(cart.quantity_cart * cart.price).toLocaleString('vi-VN')} đ</p>` : `<p>${(cart.quantity_cart * cart.price).toLocaleString('vi-VN')} đ </p>`}
                            ${cart.promotion_price ? `<p>${(cart.quantity_cart * cart.promotion_price).toLocaleString('vi-VN')} đ </p>` : ''} 
                        </div>
                    </div>
                    
                    <div class="content-ht" >
                        <button onclick="handleDeleteCart(${cart.id_cart})"><i style="color: black; font-size: 20px;" class="bi bi-trash3"></i></button>
                    </div>
                </div>
            </div>
            `;
        })
        listCarts.innerHTML = html.join('');
    }

    // function handleSubmitForm(carts){
    //     let idCart = document.querySelector('.cart-id-cart');
    //     let html = carts.map(function (cart) {
    //         return `
    //                 <input type="hidden" name="idCart${cart.id_cart}" value="${cart.id_cart}">
    //                 <input type="hidden" name="priceCart${cart.id_cart}" value="${cart.promotion_price ? cart.promotion_price : cart.price}">
    //         `
    //     })
    //     idCart.innerHTML = html.join('');
    // }

    function renderCartSummary(carts) {
        let cartSummary = document.querySelector('.detail-subtotal');
        let cartShip = document.querySelector('.cart-ship');
        let cartTotal = document.querySelector('.cart-total');

        function handlePrice(accumulator, currenValue) {
            let total = currenValue.promotion_price > 0 ? accumulator + (currenValue.promotion_price * currenValue.quantity_cart) : accumulator + (currenValue.price * currenValue.quantity_cart)
            return total;
        }
        let totalPrice = carts.reduce(handlePrice, 0);// tổng tiền giỏ hàng
        cartSummary.innerHTML = totalPrice.toLocaleString('vi-VN') + ' đ';
        //XL phí ship hàng
        if (totalPrice > 5000000) {
            cartShip.innerHTML = "Free"
        } else if (totalPrice == 0) {
            cartShip.innerHTML = 0 + ' đ'
        } else {
            cartShip.innerHTML = (250000).toLocaleString('vi-VN') + ' đ'
        };
        // totalPrice > 5000000 ? cartShip.innerHTML = "Free" : cartShip.innerHTML = (250000).toLocaleString('vi-VN') + ' đ';
        //XL tổng đơn hàng
        if (totalPrice > 5000000) {
            cartTotal.innerHTML = totalPrice.toLocaleString('vi-VN') + ' đ'
        } else if (totalPrice == 0) {
            cartTotal.innerHTML = 0 + ' đ'
        } else {
            cartTotal.innerHTML = (totalPrice + 250000).toLocaleString('vi-VN') + ' đ'
        };
        // totalPrice > 5000000 ? cartTotal.innerHTML = totalPrice.toLocaleString('vi-VN') + ' đ' : cartTotal.innerHTML = (totalPrice + 250000).toLocaleString('vi-VN') + ' đ';
    }

    function handleDeleteCart(id) {
        let options = {
            method: 'DELETE',
            headers: {
                "Content-Type": "application/json",
            },
        }
        fetch(cartApi + '/' + id, options)
            .then(function (res) {
                return res.json();
            })
            .then(function () {
                // xử lý xóa elements
                let cartItem = document.querySelector('.cart-item-' + id);
                renderSuccess()
                if (cartItem) {
                    cartItem.remove();
                    return start();
                }
            });

        ;
    }

    function handleQuantityCart(carts) {
        carts.map(function (cart) {
            const inputElement = document.getElementById("quantity_input_" + cart.id_cart)
            let quantityInput = parseInt(inputElement.value) || 0;
            quantityInput = Math.max(0, Math.min(cart.quantity, quantityInput));
            inputElement.value = quantityInput;
            handleUpdateQuantityCart(cart.id_cart, cart.quantity)
        })
    }

    function handleUpdateQuantityCart(id, quantity) {

        const inputElement = document.getElementById("quantity_input_" + id)
        let quantityInput = parseInt(inputElement.value) || 0;
        // quantityInput = Math.max(0, quantityInput);
        quantityInput = Math.max(1, Math.min(quantity, quantityInput));
        inputElement.value = quantityInput;
        let data = {
            quantity_cart: quantityInput,
            id_cart: id
        }
        let options = {
            method: 'PUT',
            body: JSON.stringify(data),
            headers: {
                "Content-Type": "application/json ; charset=UTF-8",
            },
        }
        fetch(cartApi, options)
            .then(function (res) {
                return res.json();
            })
            .then(function () {
                return start();
            })
    }

    function increaseQuantity(id, quantity) {
        const inputElement = document.getElementById("quantity_input_" + id)
        let quantityInput = parseInt(inputElement.value) || 0;
        quantityInput = Math.min(quantity, quantityInput + 1);
        inputElement.value = quantityInput;
        // Kích hoạt sự kiện input sau khi thay đổi giá trị
        const event = new Event('input', { bubbles: true });
        inputElement.dispatchEvent(event);
    }
    function decreaseQuantity(id, quantity) {
        const inputElement = document.getElementById("quantity_input_" + id)
        let quantityInput = parseInt(inputElement.value) || 0;
        quantityInput = Math.max(1, quantityInput - 1);
        inputElement.value = quantityInput;
        // Kích hoạt sự kiện input sau khi thay đổi giá trị
        const event = new Event('input', { bubbles: true });
        inputElement.dispatchEvent(event);
    }

    // Show notification successfully
    function toast({ title = '', message = '' }) {
        const main = document.getElementById("toast");
        if (main) {
            const toast = document.createElement("div");
            toast.innerHTML = `
                                <div class="toast-messenges toast-${title}">
                                    <div class="toast__icon">
                                        <i class="bi bi-check-circle-fill"></i>
                                    </div>
                                    <div class="toast__body">
                                        <h3 class="toast__title">${title}</h3>
                                        <p class="toast__msg">${message}</p>
                                    </div>
                                </div>
                            `
            main.appendChild(toast)
            setTimeout(function () {
                main.removeChild(toast)
            }, 3000)
        }
    }

    function renderSuccess() {
        toast({
            title: "Success",
            message: "Product deletion successfully."
        })
    }



</script>